field_name,type,mode
Sales_Orders_Sales_order_ID,INTEGER,NULLABLE
Sales_Orders_Order_Date,DATE,NULLABLE
Sales_Orders_Sales_Order_,STRING,NULLABLE
Sales_Orders_Status,STRING,NULLABLE
Sales_Orders_Sub_Total__BCY_,FLOAT,NULLABLE
Sales_Orders_Total__BCY_,FLOAT,NULLABLE
Sales_Orders_Discount_Amount__BCY_,FLOAT,NULLABLE
Sales_Orders_Adjustment__BCY_,FLOAT,NULLABLE
Sales_Orders_Created_Time,TIMESTAMP,NULLABLE
Sales_Orders_Customer_ID,INTEGER,NULLABLE
Sales_Orders_Currency_Code,STRING,NULLABLE
Sales_Orders_Exchange_Rate,FLOAT,NULLABLE
Sales_Orders_Discount____,FLOAT,NULLABLE
Sales_Orders_Last_Modified_Time,TIMESTAMP,NULLABLE
Sales_Orders_Expected_Shipment_Date,DATE,NULLABLE
Sales_Orders_CRM_Reference_ID,INTEGER,NULLABLE
Sales_Orders_Invoiced_Status,STRING,NULLABLE
Sales_Orders_Paid_Status,STRING,NULLABLE
Sales_Orders_Sales_Channel,STRING,NULLABLE
Sales_Orders_Sales_Person_ID,INTEGER,NULLABLE
Sales_Orders_Source,STRING,NULLABLE
Sales_Orders_Reason_for_cancel,STRING,NULLABLE
Sales_Orders_Branch_ID,INTEGER,NULLABLE
Sales_Orders_Rescheduling_Status,STRING,NULLABLE
Sales_Orders_Notes,STRING,NULLABLE
Sales_Orders_Sales_Team,STRING,NULLABLE
Sales_Orders_Reference_Number,STRING,NULLABLE
Sales_Order_Items_Item_ID,INTEGER,NULLABLE
Sales_Order_Items_Product_ID,INTEGER,NULLABLE
Sales_Order_Items_Item_Name,STRING,NULLABLE
Sales_Order_Items_Quantity,FLOAT,NULLABLE
Sales_Order_Items_Sub_Total__BCY_,FLOAT,NULLABLE
Sales_Order_Items_Total__BCY_,FLOAT,NULLABLE
Sales_Order_Items_Project_ID,STRING,NULLABLE
Sales_Order_Items_Last_Modified_Time,TIMESTAMP,NULLABLE
Sales_Order_Items_Created_Time,TIMESTAMP,NULLABLE
Sales_Order_Items_Quantity_Invoiced,FLOAT,NULLABLE
Sales_Order_Items_Quantity_Cancelled,FLOAT,NULLABLE
Sales_Order_Items_Quantity_Packed,FLOAT,NULLABLE
Sales_Order_Items_Quantity_Shipped,FLOAT,NULLABLE
Sales_Order_Items_Quantity_Delivered,FLOAT,NULLABLE
Sales_Order_Items_Non_Package_Quantity,FLOAT,NULLABLE
Sales_Order_Items_Product_Category,STRING,NULLABLE
Items_Status,STRING,NULLABLE
Items_Purchase_Account,INTEGER,NULLABLE
Items_Sales_Account,INTEGER,NULLABLE
Items_Type,STRING,NULLABLE
Items_Purchase_Price,FLOAT,NULLABLE
Items_Usage_unit,STRING,NULLABLE
Items_Sales_Price,FLOAT,NULLABLE
Items_CRM_Reference_ID,INTEGER,NULLABLE
Items_Returnable_Items,BOOLEAN,NULLABLE
Items_Last_Modified_Time,TIMESTAMP,NULLABLE
Items_Created_Time,TIMESTAMP,NULLABLE
Items_SKU,STRING,NULLABLE
Items_Brand,STRING,NULLABLE
Items_Manufacturer,STRING,NULLABLE
Items_Product_Type,STRING,NULLABLE
Items_Product_Category,STRING,NULLABLE
Items_Category_ID,INTEGER,NULLABLE
Items_Manufacturer_ID,INTEGER,NULLABLE
Items_Group_ID,INTEGER,NULLABLE
Invoices_Invoice_Number,STRING,NULLABLE
Invoices_Invoice_Date,DATE,NULLABLE
Invoices_Invoice_Status,STRING,NULLABLE
Invoices_Customer_ID,INTEGER,NULLABLE
Invoices_Due_Date,DATE,NULLABLE
Invoices_Discount____,FLOAT,NULLABLE
Invoices_Sub_Total__BCY_,FLOAT,NULLABLE
Invoices_Discount_Amount,FLOAT,NULLABLE
Invoices_Adjustment__BCY_,FLOAT,NULLABLE
Invoices_Total__BCY_,FLOAT,NULLABLE
Invoices_Sales_Person_ID,INTEGER,NULLABLE
Invoices_Created_Time,TIMESTAMP,NULLABLE
Invoices_Age_In_Days,INTEGER,NULLABLE
Invoices_Age_Tier,STRING,NULLABLE
Invoices_Subscription_ID,STRING,NULLABLE
Invoices_Type,STRING,NULLABLE
Invoices_Balance__BCY_,FLOAT,NULLABLE
Invoices_Purchase_Order_,STRING,NULLABLE
Invoices_Exchange_Rate,FLOAT,NULLABLE
Invoices_Write_Off_Amount__BCY_,FLOAT,NULLABLE
Invoices_Last_Modified_Time,TIMESTAMP,NULLABLE
Invoices_Discount_Amount__BCY_,FLOAT,NULLABLE
Invoices_Discount_Amount__FCY_,FLOAT,NULLABLE
Invoices_Status,STRING,NULLABLE
Invoices_COD_Status,STRING,NULLABLE
Warehouses_Warehouse_ID,INTEGER,NULLABLE
Warehouses_Last_Modified_Time,TIMESTAMP,NULLABLE
Warehouses_Created_Time,TIMESTAMP,NULLABLE
Warehouses_Warehouse_Name,STRING,NULLABLE
Warehouses_City,STRING,NULLABLE
Warehouses_State,STRING,NULLABLE
Warehouses_ZIP_Postal_Code,INTEGER,NULLABLE
TAKE_RATE1_S_No_,INTEGER,NULLABLE
TAKE_RATE1_FOB,FLOAT,NULLABLE
Sales_Persons_Sales_Person_ID,INTEGER,NULLABLE
Sales_Persons_Name,STRING,NULLABLE
Sales_Persons_Status,STRING,NULLABLE
Sales_Persons_Last_Modified_Time,TIMESTAMP,NULLABLE
Sales_Persons_Created_Time,TIMESTAMP,NULLABLE
Branch_Mapping_Branch_Name,STRING,NULLABLE
Customers_Customer_Name,STRING,NULLABLE
Customers_Phone,INTEGER,NULLABLE
Customers_Mobile_Phone,INTEGER,NULLABLE
Customer_Addresses_Billing_City,STRING,NULLABLE
Customer_Addresses_Billing_Code,STRING,NULLABLE
Customer_Addresses_Billing_State,STRING,NULLABLE
Customer_Addresses_Billing_Address_Attention,STRING,NULLABLE
Customer_Addresses_Billing_Street,STRING,NULLABLE
Customer_Addresses_Billing_Street_2,STRING,NULLABLE
Customer_Addresses_Shipping_City,STRING,NULLABLE
Customer_Addresses_Shipping_Code,STRING,NULLABLE
Customer_Addresses_Shipping_State,STRING,NULLABLE
Customer_Addresses_Shipping_Address_Attention,STRING,NULLABLE
Customer_Addresses_Shipping_Street,STRING,NULLABLE
Customer_Addresses_Shipping_Street_2,STRING,NULLABLE
Invoice_Items_Invoice_ID,INTEGER,NULLABLE
Invoice_Items_Quantity,FLOAT,NULLABLE
Invoice_Items_Sub_Total__BCY_,FLOAT,NULLABLE
Invoice_Items_Total__BCY_,FLOAT,NULLABLE
TAKE_RATE1_Category,STRING,NULLABLE
TAKE_RATE1_SKU,STRING,NULLABLE
TAKE_RATE1_Item_name,STRING,NULLABLE
month_of_sale,STRING,NULLABLE
week_of_sale,INTEGER,NULLABLE
year_of_sale,INTEGER,NULLABLE
weekday,STRING,NULLABLE
week_start_date,STRING,NULLABLE
week_end_date,STRING,NULLABLE
sale_week,STRING,NULLABLE
sale_day,STRING,NULLABLE
business_week_name,STRING,NULLABLE
master_sku,STRING,NULLABLE
item_name,STRING,NULLABLE
fob_price,FLOAT,NULLABLE
weight,FLOAT,NULLABLE
item_category_label,STRING,NULLABLE
AppVsNonApp,STRING,NULLABLE
today_date,DATE,NULLABLE
today_day,INTEGER,NULLABLE
today_month,INTEGER,NULLABLE
today_year,INTEGER,NULLABLE
ESD_day,INTEGER,NULLABLE
ESD_month,INTEGER,NULLABLE
ESD_year,INTEGER,NULLABLE
day_diff,INTEGER,NULLABLE
week_index,FLOAT,NULLABLE
DoD_prev_month,BOOLEAN,NULLABLE
current_month_rolling,BOOLEAN,NULLABLE
prev_month_rolling,BOOLEAN,NULLABLE
p_2_month_rolling,BOOLEAN,NULLABLE
p_3_month_rolling,BOOLEAN,NULLABLE
p_4_month_rolling,BOOLEAN,NULLABLE
mtd_current_month_rolling,BOOLEAN,NULLABLE
mtd_prev_month_rolling,BOOLEAN,NULLABLE
mtd_p_2_month_rolling,BOOLEAN,NULLABLE
mtd_p_3_month_rolling,BOOLEAN,NULLABLE
mtd_p_4_month_rolling,BOOLEAN,NULLABLE
DoD_label,STRING,NULLABLE
MoM_label,STRING,NULLABLE
MTD_label,STRING,NULLABLE
week_label,STRING,NULLABLE
cleaned_warehouse_name,STRING,NULLABLE
product_category,STRING,NULLABLE
item_category,STRING,NULLABLE
warehouse_category,STRING,NULLABLE
item_sku_processed,STRING,NULLABLE
processed_takerate_name,STRING,NULLABLE
NewCustomerOrder,STRING,NULLABLE
WalletRedemption,FLOAT,NULLABLE
