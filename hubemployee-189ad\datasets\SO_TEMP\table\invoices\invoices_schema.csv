field_name,type,mode
invoice_id,INTEGER,NULLABLE
Customer_Name,STRING,NULLABLE
Customer_ID,INTEGER,NULLABLE
status,STRING,NULLABLE
invoice_number,STRING,NULLABLE
SalesOrder_Number,STRING,NULLABLE
date,STRING,NULLABLE
due_date,STRING,NULLABLE
currency_id,INTEGER,NULLABLE
Currency_Code,STRING,NULLABLE
currency_symbol,STRING,NULLABLE
is_pre_gst,FLOAT,NULLABLE
invoice_url,FLOAT,NULLABLE
Branch_ID,INTEGER,NULLABLE
Branch_Name,STRING,NULLABLE
Billing_Address,STRING,NULLABLE
Billing_City,STRING,NULLABLE
Billing_State,STRING,NULLABLE
Billing_Country,STRING,NULLABLE
Billing_Code,FLOAT,NULLABLE
Billing_Fax,FLOAT,NULLABLE
Billing_Phone,STRING,NULLABLE
Shipping_Address,STRING,NULLABLE
Shipping_City,STRING,NULLABLE
Shipping_State,STRING,NULLABLE
Shipping_Country,STRING,NULLABLE
Shipping_Code,FLOAT,NULLABLE
Shipping_Fax,FLOAT,NULLABLE
Shipping_Phone,STRING,NULLABLE
Sales_Person,STRING,NULLABLE
phone,STRING,NULLABLE
mobile_phone,STRING,NULLABLE
