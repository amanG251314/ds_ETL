event_date,event_timestamp,event_name,event_params,event_previous_timestamp,event_value_in_usd,event_bundle_sequence_id,event_server_timestamp_offset,user_id,user_pseudo_id,privacy_info,user_properties,user_first_touch_timestamp,user_ltv,device,geo,app_info,traffic_source,stream_id,platform,event_dimensions,ecommerce,items
20221208,1670483316128000,notification_receive,"[{'key': 'message_time', 'value': {'string_value': None, 'int_value': 1670482800, 'float_value': None, 'double_value': None}}, {'key': 'message_device_time', 'value': {'string_value': None, 'int_value': 0, 'float_value': None, 'double_value': None}}, {'key': 'message_id', 'value': {'string_value': '6866323216198456191', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_type', 'value': {'string_value': 'display', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'fcm', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_name', 'value': {'string_value': 'afternoon_12:30PM', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'label', 'value': {'string_value': 'Bulk_Discount', 'int_value': None, 'float_value': None, 'double_value': None}}]",1670476128924000,,923,1751064,wtvKWZVqYUc4k94yEsA6gD0eALJ2,8a69ae3778beba5d9df2b29a7d4280aa,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1661914800000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1661911436801000}}, {'key': 'firebase_last_notification', 'value': {'string_value': '3838579916854988414', 'int_value': None, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1665622765996000}}, {'key': 'user_id', 'value': {'string_value': 'wtvKWZVqYUc4k94yEsA6gD0eALJ2', 'int_value': None, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1663044336182000}}]",1661911436801000,,"{'category': 'mobile', 'mobile_brand_name': 'Tecno', 'mobile_model_name': 'CD8', 'mobile_marketing_name': 'Camon 15 Pro', 'mobile_os_hardware_model': 'TECNO CD8', 'operating_system': 'Android', 'operating_system_version': 'Android 10', 'vendor_id': None, 'advertising_id': '45a9dc9c-6d58-48eb-93ce-1a4d5afe8e6d', 'language': 'en-us', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Uttar Pradesh', 'city': 'Gorakhpur', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'app.merapashu360.buyerapp', 'version': 'Beta 0.1.37', 'install_store': None, 'firebase_app_id': '1:292489922155:android:1470f63f21688e343dd32e', 'install_source': 'com.android.vending'}",,3454048667,ANDROID,,,[]
20221208,1670472900721000,notification_receive,"[{'key': 'message_name', 'value': {'string_value': 'morning_9:30AM', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'label', 'value': {'string_value': 'Silage', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_time', 'value': {'string_value': None, 'int_value': 1670472000, 'float_value': None, 'double_value': None}}, {'key': 'message_device_time', 'value': {'string_value': None, 'int_value': 0, 'float_value': None, 'double_value': None}}, {'key': 'message_id', 'value': {'string_value': '5282546767659175007', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_type', 'value': {'string_value': 'display', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'fcm', 'int_value': None, 'float_value': None, 'double_value': None}}]",1670468261104000,,921,1631987,wtvKWZVqYUc4k94yEsA6gD0eALJ2,8a69ae3778beba5d9df2b29a7d4280aa,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'user_id', 'value': {'string_value': 'wtvKWZVqYUc4k94yEsA6gD0eALJ2', 'int_value': None, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1663044336182000}}, {'key': 'firebase_last_notification', 'value': {'string_value': '3838579916854988414', 'int_value': None, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1665622765996000}}, {'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1661914800000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1661911436801000}}]",1661911436801000,,"{'category': 'mobile', 'mobile_brand_name': 'Tecno', 'mobile_model_name': 'CD8', 'mobile_marketing_name': 'Camon 15 Pro', 'mobile_os_hardware_model': 'TECNO CD8', 'operating_system': 'Android', 'operating_system_version': 'Android 10', 'vendor_id': None, 'advertising_id': '45a9dc9c-6d58-48eb-93ce-1a4d5afe8e6d', 'language': 'en-us', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Uttar Pradesh', 'city': 'Gorakhpur', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'app.merapashu360.buyerapp', 'version': 'Beta 0.1.37', 'install_store': None, 'firebase_app_id': '1:292489922155:android:1470f63f21688e343dd32e', 'install_source': 'com.android.vending'}",,3454048667,ANDROID,,,[]
20221208,1670492396457000,notification_receive,"[{'key': 'message_time', 'value': {'string_value': None, 'int_value': 1670491800, 'float_value': None, 'double_value': None}}, {'key': 'message_type', 'value': {'string_value': 'display', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_id', 'value': {'string_value': '1759844212488725491', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_device_time', 'value': {'string_value': None, 'int_value': 0, 'float_value': None, 'double_value': None}}, {'key': 'label', 'value': {'string_value': 'why_purchase_bhains_fromUs', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_name', 'value': {'string_value': 'afternoon_3PM', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'fcm', 'int_value': None, 'float_value': None, 'double_value': None}}]",1670483316128000,,924,1579685,wtvKWZVqYUc4k94yEsA6gD0eALJ2,8a69ae3778beba5d9df2b29a7d4280aa,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1661914800000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1661911436801000}}, {'key': 'user_id', 'value': {'string_value': 'wtvKWZVqYUc4k94yEsA6gD0eALJ2', 'int_value': None, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1663044336182000}}, {'key': 'firebase_last_notification', 'value': {'string_value': '3838579916854988414', 'int_value': None, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1665622765996000}}]",1661911436801000,,"{'category': 'mobile', 'mobile_brand_name': 'Tecno', 'mobile_model_name': 'CD8', 'mobile_marketing_name': 'Camon 15 Pro', 'mobile_os_hardware_model': 'TECNO CD8', 'operating_system': 'Android', 'operating_system_version': 'Android 10', 'vendor_id': None, 'advertising_id': '45a9dc9c-6d58-48eb-93ce-1a4d5afe8e6d', 'language': 'en-us', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Uttar Pradesh', 'city': 'Gorakhpur', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'app.merapashu360.buyerapp', 'version': 'Beta 0.1.37', 'install_store': None, 'firebase_app_id': '1:292489922155:android:1470f63f21688e343dd32e', 'install_source': 'com.android.vending'}",,3454048667,ANDROID,,,[]
20221208,1670484399506000,notification_receive,"[{'key': 'message_type', 'value': {'string_value': 'display', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_id', 'value': {'string_value': '6866323216198456191', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'fcm', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'label', 'value': {'string_value': 'Bulk_Discount', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_name', 'value': {'string_value': 'afternoon_12:30PM', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_time', 'value': {'string_value': None, 'int_value': 1670482800, 'float_value': None, 'double_value': None}}, {'key': 'message_device_time', 'value': {'string_value': None, 'int_value': 0, 'float_value': None, 'double_value': None}}]",1670476118860000,,183,1318385,XpeIl7HAcuWuJmdXQrLQ3xDSFOB2,6aef0cd1ae7ee8996c90d91634497975,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'user_id', 'value': {'string_value': 'XpeIl7HAcuWuJmdXQrLQ3xDSFOB2', 'int_value': None, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1670074830416000}}, {'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1655218800000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1655218557486000}}]",1655218557486000,,"{'category': 'mobile', 'mobile_brand_name': 'Tecno', 'mobile_model_name': 'KF6', 'mobile_marketing_name': 'Spark 7', 'mobile_os_hardware_model': 'TECNO KF6', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': '6ef18100-b808-4b7e-a6b1-aabd8280601a', 'language': 'en-us', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Haryana', 'city': 'Panipat', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'app.merapashu360.buyerapp', 'version': '1.0.0', 'install_store': None, 'firebase_app_id': '1:292489922155:android:1470f63f21688e343dd32e', 'install_source': 'com.android.vending'}",,3454048667,ANDROID,,,[]
20221208,1670457821479000,notification_receive,"[{'key': 'message_name', 'value': {'string_value': 'morning_5:30AM', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'label', 'value': {'string_value': 'free_delivery', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_id', 'value': {'string_value': '4792862569564448327', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_time', 'value': {'string_value': None, 'int_value': 1670457600, 'float_value': None, 'double_value': None}}, {'key': 'message_type', 'value': {'string_value': 'display', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_device_time', 'value': {'string_value': None, 'int_value': 0, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'fcm', 'int_value': None, 'float_value': None, 'double_value': None}}]",1670427144769000,,176,1203961,XpeIl7HAcuWuJmdXQrLQ3xDSFOB2,6aef0cd1ae7ee8996c90d91634497975,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'user_id', 'value': {'string_value': 'XpeIl7HAcuWuJmdXQrLQ3xDSFOB2', 'int_value': None, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1670074830416000}}, {'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1655218800000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1655218557486000}}]",1655218557486000,,"{'category': 'mobile', 'mobile_brand_name': 'Tecno', 'mobile_model_name': 'KF6', 'mobile_marketing_name': 'Spark 7', 'mobile_os_hardware_model': 'TECNO KF6', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': '6ef18100-b808-4b7e-a6b1-aabd8280601a', 'language': 'en-us', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Haryana', 'city': 'Panipat', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'app.merapashu360.buyerapp', 'version': '1.0.0', 'install_store': None, 'firebase_app_id': '1:292489922155:android:1470f63f21688e343dd32e', 'install_source': 'com.android.vending'}",,3454048667,ANDROID,,,[]
20221208,1670472518316000,notification_receive,"[{'key': 'message_id', 'value': {'string_value': '5282546767659175007', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_name', 'value': {'string_value': 'morning_9:30AM', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'fcm', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'label', 'value': {'string_value': 'Silage', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_device_time', 'value': {'string_value': None, 'int_value': 0, 'float_value': None, 'double_value': None}}, {'key': 'message_type', 'value': {'string_value': 'display', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_time', 'value': {'string_value': None, 'int_value': 1670472000, 'float_value': None, 'double_value': None}}]",1670468807687000,,181,1202027,XpeIl7HAcuWuJmdXQrLQ3xDSFOB2,6aef0cd1ae7ee8996c90d91634497975,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'user_id', 'value': {'string_value': 'XpeIl7HAcuWuJmdXQrLQ3xDSFOB2', 'int_value': None, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1670074830416000}}, {'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1655218800000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1655218557486000}}]",1655218557486000,,"{'category': 'mobile', 'mobile_brand_name': 'Tecno', 'mobile_model_name': 'KF6', 'mobile_marketing_name': 'Spark 7', 'mobile_os_hardware_model': 'TECNO KF6', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': '6ef18100-b808-4b7e-a6b1-aabd8280601a', 'language': 'en-us', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Haryana', 'city': 'Panipat', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'app.merapashu360.buyerapp', 'version': '1.0.0', 'install_store': None, 'firebase_app_id': '1:292489922155:android:1470f63f21688e343dd32e', 'install_source': 'com.android.vending'}",,3454048667,ANDROID,,,[]
20221208,1670476118860000,notification_receive,"[{'key': 'firebase_event_origin', 'value': {'string_value': 'fcm', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_time', 'value': {'string_value': None, 'int_value': 1670475600, 'float_value': None, 'double_value': None}}, {'key': 'message_type', 'value': {'string_value': 'display', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_id', 'value': {'string_value': '5162538912467103295', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_device_time', 'value': {'string_value': None, 'int_value': 0, 'float_value': None, 'double_value': None}}, {'key': 'message_name', 'value': {'string_value': 'morning_10:30AM', 'int_value': None, 'float_value': None, 'double_value': None}}]",1670472518316000,,182,1197530,XpeIl7HAcuWuJmdXQrLQ3xDSFOB2,6aef0cd1ae7ee8996c90d91634497975,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'user_id', 'value': {'string_value': 'XpeIl7HAcuWuJmdXQrLQ3xDSFOB2', 'int_value': None, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1670074830416000}}, {'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1655218800000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1655218557486000}}]",1655218557486000,,"{'category': 'mobile', 'mobile_brand_name': 'Tecno', 'mobile_model_name': 'KF6', 'mobile_marketing_name': 'Spark 7', 'mobile_os_hardware_model': 'TECNO KF6', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': '6ef18100-b808-4b7e-a6b1-aabd8280601a', 'language': 'en-us', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Haryana', 'city': 'Panipat', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'app.merapashu360.buyerapp', 'version': '1.0.0', 'install_store': None, 'firebase_app_id': '1:292489922155:android:1470f63f21688e343dd32e', 'install_source': 'com.android.vending'}",,3454048667,ANDROID,,,[]
20221208,1670464988337000,notification_receive,"[{'key': 'message_device_time', 'value': {'string_value': None, 'int_value': 0, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'fcm', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_id', 'value': {'string_value': '4102751082042985656', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_name', 'value': {'string_value': 'morning_7:30AM', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'label', 'value': {'string_value': 'free_delivery', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_type', 'value': {'string_value': 'display', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_time', 'value': {'string_value': None, 'int_value': 1670464800, 'float_value': None, 'double_value': None}}]",1670461492673000,,178,1681847,XpeIl7HAcuWuJmdXQrLQ3xDSFOB2,6aef0cd1ae7ee8996c90d91634497975,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'user_id', 'value': {'string_value': 'XpeIl7HAcuWuJmdXQrLQ3xDSFOB2', 'int_value': None, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1670074830416000}}, {'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1655218800000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1655218557486000}}]",1655218557486000,,"{'category': 'mobile', 'mobile_brand_name': 'Tecno', 'mobile_model_name': 'KF6', 'mobile_marketing_name': 'Spark 7', 'mobile_os_hardware_model': 'TECNO KF6', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': '6ef18100-b808-4b7e-a6b1-aabd8280601a', 'language': 'en-us', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Haryana', 'city': 'Panipat', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'app.merapashu360.buyerapp', 'version': '1.0.0', 'install_store': None, 'firebase_app_id': '1:292489922155:android:1470f63f21688e343dd32e', 'install_source': 'com.android.vending'}",,3454048667,ANDROID,,,[]
20221208,1670472512948000,notification_receive,"[{'key': 'message_id', 'value': {'string_value': '5282546767659175007', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'fcm', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_type', 'value': {'string_value': 'display', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_device_time', 'value': {'string_value': None, 'int_value': 0, 'float_value': None, 'double_value': None}}, {'key': 'message_name', 'value': {'string_value': 'morning_9:30AM', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_time', 'value': {'string_value': None, 'int_value': 1670472000, 'float_value': None, 'double_value': None}}, {'key': 'label', 'value': {'string_value': 'Silage', 'int_value': None, 'float_value': None, 'double_value': None}}]",1670468571381000,,177,1045643,LZHUtDTfPYb7blaa8AxD4ynwyKQ2,8095580039067f61c335e3b1ffa2e8e6,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1663434000000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1663431823373000}}, {'key': 'user_id', 'value': {'string_value': 'LZHUtDTfPYb7blaa8AxD4ynwyKQ2', 'int_value': None, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1669682191997000}}]",1663431823373000,,"{'category': 'mobile', 'mobile_brand_name': 'Vivo', 'mobile_model_name': '1814', 'mobile_marketing_name': 'Y91', 'mobile_os_hardware_model': 'vivo 1814', 'operating_system': 'Android', 'operating_system_version': 'Android 8.1.0', 'vendor_id': None, 'advertising_id': '89bd1cc9-d641-4000-bcaf-1f752de45e49', 'language': 'hi-in', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Rajasthan', 'city': 'Jaipur', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'app.merapashu360.buyerapp', 'version': '1.0.0', 'install_store': None, 'firebase_app_id': '1:292489922155:android:1470f63f21688e343dd32e', 'install_source': 'com.android.vending'}",,3454048667,ANDROID,,,[]
20221208,1670475879642000,notification_receive,"[{'key': 'message_name', 'value': {'string_value': 'morning_10:30AM', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_time', 'value': {'string_value': None, 'int_value': 1670475600, 'float_value': None, 'double_value': None}}, {'key': 'message_id', 'value': {'string_value': '5162538912467103295', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_type', 'value': {'string_value': 'display', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'message_device_time', 'value': {'string_value': None, 'int_value': 0, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'fcm', 'int_value': None, 'float_value': None, 'double_value': None}}]",1670472512948000,,178,552875,LZHUtDTfPYb7blaa8AxD4ynwyKQ2,8095580039067f61c335e3b1ffa2e8e6,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1663434000000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1663431823373000}}, {'key': 'user_id', 'value': {'string_value': 'LZHUtDTfPYb7blaa8AxD4ynwyKQ2', 'int_value': None, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1669682191997000}}]",1663431823373000,,"{'category': 'mobile', 'mobile_brand_name': 'Vivo', 'mobile_model_name': '1814', 'mobile_marketing_name': 'Y91', 'mobile_os_hardware_model': 'vivo 1814', 'operating_system': 'Android', 'operating_system_version': 'Android 8.1.0', 'vendor_id': None, 'advertising_id': '89bd1cc9-d641-4000-bcaf-1f752de45e49', 'language': 'hi-in', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Rajasthan', 'city': 'Jaipur', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'app.merapashu360.buyerapp', 'version': '1.0.0', 'install_store': None, 'firebase_app_id': '1:292489922155:android:1470f63f21688e343dd32e', 'install_source': 'com.android.vending'}",,3454048667,ANDROID,,,[]
