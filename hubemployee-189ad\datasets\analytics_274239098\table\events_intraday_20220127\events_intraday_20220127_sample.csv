event_date,event_timestamp,event_name,event_params,event_previous_timestamp,event_value_in_usd,event_bundle_sequence_id,event_server_timestamp_offset,user_id,user_pseudo_id,privacy_info,user_properties,user_first_touch_timestamp,user_ltv,device,geo,app_info,traffic_source,stream_id,platform,event_dimensions,ecommerce,items
20220127,1643277955706912,session_start,"[{'key': 'engaged_session_event', 'value': {'string_value': None, 'int_value': 1, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'auto', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_number', 'value': {'string_value': None, 'int_value': 3, 'float_value': None, 'double_value': None}}, {'key': 'session_engaged', 'value': {'string_value': None, 'int_value': 1, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_id', 'value': {'string_value': None, 'int_value': 1643277954, 'float_value': None, 'double_value': None}}]",1642588785791000,,10,1063912,,c2aec29dec46533207af1d1e9ad1b789,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1642586400000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1642583793061912}}]",1642583791998000,,"{'category': 'mobile', 'mobile_brand_name': 'Samsung', 'mobile_model_name': 'SM-M326B', 'mobile_marketing_name': None, 'mobile_os_hardware_model': 'SM-M326B', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': None, 'language': 'en-gb', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Karnataka', 'city': 'Mangalore', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'com.example.buyerapp', 'version': 'buyer alpha 1.0', 'install_store': None, 'firebase_app_id': '1:1019598212725:android:9f7792236ffe7f57ed323c', 'install_source': 'com.google.android.packageinstaller'}","{'name': '(direct)', 'medium': '(none)', 'source': '(direct)'}",2757690060,ANDROID,,,[]
20220127,1643277955787913,screen_view,"[{'key': 'firebase_event_origin', 'value': {'string_value': 'auto', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_id', 'value': {'string_value': None, 'int_value': -292781400533582524, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_number', 'value': {'string_value': None, 'int_value': 3, 'float_value': None, 'double_value': None}}, {'key': 'engaged_session_event', 'value': {'string_value': None, 'int_value': 1, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_class', 'value': {'string_value': 'MainActivity', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'entrances', 'value': {'string_value': None, 'int_value': 1, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_id', 'value': {'string_value': None, 'int_value': 1643277954, 'float_value': None, 'double_value': None}}]",1642591982455001,,10,1063912,,c2aec29dec46533207af1d1e9ad1b789,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1642586400000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1642583793061912}}]",1642583791998000,,"{'category': 'mobile', 'mobile_brand_name': 'Samsung', 'mobile_model_name': 'SM-M326B', 'mobile_marketing_name': None, 'mobile_os_hardware_model': 'SM-M326B', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': None, 'language': 'en-gb', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Karnataka', 'city': 'Mangalore', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'com.example.buyerapp', 'version': 'buyer alpha 1.0', 'install_store': None, 'firebase_app_id': '1:1019598212725:android:9f7792236ffe7f57ed323c', 'install_source': 'com.google.android.packageinstaller'}","{'name': '(direct)', 'medium': '(none)', 'source': '(direct)'}",2757690060,ANDROID,,,[]
20220127,1643277956307914,screen_view,"[{'key': 'firebase_screen_id', 'value': {'string_value': None, 'int_value': -292781400533582523, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_id', 'value': {'string_value': None, 'int_value': 1643277954, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_number', 'value': {'string_value': None, 'int_value': 3, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'auto', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_previous_id', 'value': {'string_value': None, 'int_value': -292781400533582524, 'float_value': None, 'double_value': None}}, {'key': 'engaged_session_event', 'value': {'string_value': None, 'int_value': 1, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_class', 'value': {'string_value': 'LoginActivity', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_previous_class', 'value': {'string_value': 'MainActivity', 'int_value': None, 'float_value': None, 'double_value': None}}]",1643277954724002,,10,1063912,,c2aec29dec46533207af1d1e9ad1b789,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1642586400000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1642583793061912}}]",1642583791998000,,"{'category': 'mobile', 'mobile_brand_name': 'Samsung', 'mobile_model_name': 'SM-M326B', 'mobile_marketing_name': None, 'mobile_os_hardware_model': 'SM-M326B', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': None, 'language': 'en-gb', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Karnataka', 'city': 'Mangalore', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'com.example.buyerapp', 'version': 'buyer alpha 1.0', 'install_store': None, 'firebase_app_id': '1:1019598212725:android:9f7792236ffe7f57ed323c', 'install_source': 'com.google.android.packageinstaller'}","{'name': '(direct)', 'medium': '(none)', 'source': '(direct)'}",2757690060,ANDROID,,,[]
20220127,1643277992282915,screen_view,"[{'key': 'firebase_previous_class', 'value': {'string_value': 'LoginActivity', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'engaged_session_event', 'value': {'string_value': None, 'int_value': 1, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'auto', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_id', 'value': {'string_value': None, 'int_value': 1643277954, 'float_value': None, 'double_value': None}}, {'key': 'engagement_time_msec', 'value': {'string_value': None, 'int_value': 35407, 'float_value': None, 'double_value': None}}, {'key': 'firebase_previous_id', 'value': {'string_value': None, 'int_value': -292781400533582523, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_id', 'value': {'string_value': None, 'int_value': -292781400533582524, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_number', 'value': {'string_value': None, 'int_value': 3, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_class', 'value': {'string_value': 'MainActivity', 'int_value': None, 'float_value': None, 'double_value': None}}]",1643277955244003,,10,1063912,,c2aec29dec46533207af1d1e9ad1b789,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1642586400000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1642583793061912}}]",1642583791998000,,"{'category': 'mobile', 'mobile_brand_name': 'Samsung', 'mobile_model_name': 'SM-M326B', 'mobile_marketing_name': None, 'mobile_os_hardware_model': 'SM-M326B', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': None, 'language': 'en-gb', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Karnataka', 'city': 'Mangalore', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'com.example.buyerapp', 'version': 'buyer alpha 1.0', 'install_store': None, 'firebase_app_id': '1:1019598212725:android:9f7792236ffe7f57ed323c', 'install_source': 'com.google.android.packageinstaller'}","{'name': '(direct)', 'medium': '(none)', 'source': '(direct)'}",2757690060,ANDROID,,,[]
20220127,1643278002231916,screen_view,"[{'key': 'firebase_previous_id', 'value': {'string_value': None, 'int_value': -292781400533582524, 'float_value': None, 'double_value': None}}, {'key': 'firebase_previous_class', 'value': {'string_value': 'MainActivity', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_id', 'value': {'string_value': None, 'int_value': -292781400533582522, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_number', 'value': {'string_value': None, 'int_value': 3, 'float_value': None, 'double_value': None}}, {'key': 'engaged_session_event', 'value': {'string_value': None, 'int_value': 1, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_id', 'value': {'string_value': None, 'int_value': 1643277954, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'auto', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'engagement_time_msec', 'value': {'string_value': None, 'int_value': 9951, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_class', 'value': {'string_value': 'DetailActivity', 'int_value': None, 'float_value': None, 'double_value': None}}]",1643277991219004,,10,1063912,,c2aec29dec46533207af1d1e9ad1b789,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1642586400000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1642583793061912}}]",1642583791998000,,"{'category': 'mobile', 'mobile_brand_name': 'Samsung', 'mobile_model_name': 'SM-M326B', 'mobile_marketing_name': None, 'mobile_os_hardware_model': 'SM-M326B', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': None, 'language': 'en-gb', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Karnataka', 'city': 'Mangalore', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'com.example.buyerapp', 'version': 'buyer alpha 1.0', 'install_store': None, 'firebase_app_id': '1:1019598212725:android:9f7792236ffe7f57ed323c', 'install_source': 'com.google.android.packageinstaller'}","{'name': '(direct)', 'medium': '(none)', 'source': '(direct)'}",2757690060,ANDROID,,,[]
20220127,1643278008972917,screen_view,"[{'key': 'firebase_event_origin', 'value': {'string_value': 'auto', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'engaged_session_event', 'value': {'string_value': None, 'int_value': 1, 'float_value': None, 'double_value': None}}, {'key': 'firebase_previous_id', 'value': {'string_value': None, 'int_value': -292781400533582522, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_number', 'value': {'string_value': None, 'int_value': 3, 'float_value': None, 'double_value': None}}, {'key': 'firebase_previous_class', 'value': {'string_value': 'DetailActivity', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'engagement_time_msec', 'value': {'string_value': None, 'int_value': 6720, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_class', 'value': {'string_value': 'MainActivity', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_id', 'value': {'string_value': None, 'int_value': -292781400533582524, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_id', 'value': {'string_value': None, 'int_value': 1643277954, 'float_value': None, 'double_value': None}}]",1643278001168005,,10,1063912,,c2aec29dec46533207af1d1e9ad1b789,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1642586400000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1642583793061912}}]",1642583791998000,,"{'category': 'mobile', 'mobile_brand_name': 'Samsung', 'mobile_model_name': 'SM-M326B', 'mobile_marketing_name': None, 'mobile_os_hardware_model': 'SM-M326B', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': None, 'language': 'en-gb', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Karnataka', 'city': 'Mangalore', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'com.example.buyerapp', 'version': 'buyer alpha 1.0', 'install_store': None, 'firebase_app_id': '1:1019598212725:android:9f7792236ffe7f57ed323c', 'install_source': 'com.google.android.packageinstaller'}","{'name': '(direct)', 'medium': '(none)', 'source': '(direct)'}",2757690060,ANDROID,,,[]
20220127,1643278485932919,screen_view,"[{'key': 'firebase_screen_class', 'value': {'string_value': 'MainActivity', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_previous_class', 'value': {'string_value': 'MainActivity', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'engaged_session_event', 'value': {'string_value': None, 'int_value': 1, 'float_value': None, 'double_value': None}}, {'key': 'firebase_previous_id', 'value': {'string_value': None, 'int_value': -292781400533582524, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_number', 'value': {'string_value': None, 'int_value': 3, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_id', 'value': {'string_value': None, 'int_value': 1643277954, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_id', 'value': {'string_value': None, 'int_value': -292781400533582521, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'auto', 'int_value': None, 'float_value': None, 'double_value': None}}]",1643278007909007,,10,1063912,,c2aec29dec46533207af1d1e9ad1b789,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1642586400000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1642583793061912}}]",1642583791998000,,"{'category': 'mobile', 'mobile_brand_name': 'Samsung', 'mobile_model_name': 'SM-M326B', 'mobile_marketing_name': None, 'mobile_os_hardware_model': 'SM-M326B', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': None, 'language': 'en-gb', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Karnataka', 'city': 'Mangalore', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'com.example.buyerapp', 'version': 'buyer alpha 1.0', 'install_store': None, 'firebase_app_id': '1:1019598212725:android:9f7792236ffe7f57ed323c', 'install_source': 'com.google.android.packageinstaller'}","{'name': '(direct)', 'medium': '(none)', 'source': '(direct)'}",2757690060,ANDROID,,,[]
20220127,1643278486176920,screen_view,"[{'key': 'firebase_screen_class', 'value': {'string_value': 'LoginActivity', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_previous_class', 'value': {'string_value': 'MainActivity', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_number', 'value': {'string_value': None, 'int_value': 3, 'float_value': None, 'double_value': None}}, {'key': 'firebase_previous_id', 'value': {'string_value': None, 'int_value': -292781400533582521, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_id', 'value': {'string_value': None, 'int_value': 1643277954, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'auto', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_id', 'value': {'string_value': None, 'int_value': -292781400533582520, 'float_value': None, 'double_value': None}}, {'key': 'engaged_session_event', 'value': {'string_value': None, 'int_value': 1, 'float_value': None, 'double_value': None}}]",1643278484869008,,10,1063912,,c2aec29dec46533207af1d1e9ad1b789,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1642586400000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1642583793061912}}]",1642583791998000,,"{'category': 'mobile', 'mobile_brand_name': 'Samsung', 'mobile_model_name': 'SM-M326B', 'mobile_marketing_name': None, 'mobile_os_hardware_model': 'SM-M326B', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': None, 'language': 'en-gb', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Karnataka', 'city': 'Mangalore', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'com.example.buyerapp', 'version': 'buyer alpha 1.0', 'install_store': None, 'firebase_app_id': '1:1019598212725:android:9f7792236ffe7f57ed323c', 'install_source': 'com.google.android.packageinstaller'}","{'name': '(direct)', 'medium': '(none)', 'source': '(direct)'}",2757690060,ANDROID,,,[]
20220127,1643278516139921,user_engagement,"[{'key': 'ga_session_number', 'value': {'string_value': None, 'int_value': 3, 'float_value': None, 'double_value': None}}, {'key': 'engagement_time_msec', 'value': {'string_value': None, 'int_value': 29606, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_class', 'value': {'string_value': 'LoginActivity', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'auto', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_id', 'value': {'string_value': None, 'int_value': -292781400533582520, 'float_value': None, 'double_value': None}}, {'key': 'engaged_session_event', 'value': {'string_value': None, 'int_value': 1, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_id', 'value': {'string_value': None, 'int_value': 1643277954, 'float_value': None, 'double_value': None}}]",1643278007888009,,10,1063912,,c2aec29dec46533207af1d1e9ad1b789,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1642586400000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1642583793061912}}]",1642583791998000,,"{'category': 'mobile', 'mobile_brand_name': 'Samsung', 'mobile_model_name': 'SM-M326B', 'mobile_marketing_name': None, 'mobile_os_hardware_model': 'SM-M326B', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': None, 'language': 'en-gb', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Karnataka', 'city': 'Mangalore', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'com.example.buyerapp', 'version': 'buyer alpha 1.0', 'install_store': None, 'firebase_app_id': '1:1019598212725:android:9f7792236ffe7f57ed323c', 'install_source': 'com.google.android.packageinstaller'}","{'name': '(direct)', 'medium': '(none)', 'source': '(direct)'}",2757690060,ANDROID,,,[]
20220127,1643279448581923,user_engagement,"[{'key': 'firebase_screen_id', 'value': {'string_value': None, 'int_value': -292781400533582520, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_number', 'value': {'string_value': None, 'int_value': 3, 'float_value': None, 'double_value': None}}, {'key': 'firebase_screen_class', 'value': {'string_value': 'LoginActivity', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'engagement_time_msec', 'value': {'string_value': None, 'int_value': 2579, 'float_value': None, 'double_value': None}}, {'key': 'firebase_event_origin', 'value': {'string_value': 'auto', 'int_value': None, 'float_value': None, 'double_value': None}}, {'key': 'engaged_session_event', 'value': {'string_value': None, 'int_value': 1, 'float_value': None, 'double_value': None}}, {'key': 'ga_session_id', 'value': {'string_value': None, 'int_value': 1643277954, 'float_value': None, 'double_value': None}}]",1643278515076011,,10,1063912,,c2aec29dec46533207af1d1e9ad1b789,"{'analytics_storage': 'Yes', 'ads_storage': 'Yes', 'uses_transient_token': 'No'}","[{'key': 'first_open_time', 'value': {'string_value': None, 'int_value': 1642586400000, 'float_value': None, 'double_value': None, 'set_timestamp_micros': 1642583793061912}}]",1642583791998000,,"{'category': 'mobile', 'mobile_brand_name': 'Samsung', 'mobile_model_name': 'SM-M326B', 'mobile_marketing_name': None, 'mobile_os_hardware_model': 'SM-M326B', 'operating_system': 'Android', 'operating_system_version': 'Android 11', 'vendor_id': None, 'advertising_id': None, 'language': 'en-gb', 'is_limited_ad_tracking': 'No', 'time_zone_offset_seconds': 19800, 'browser': None, 'browser_version': None, 'web_info': None}","{'continent': 'Asia', 'country': 'India', 'region': 'Karnataka', 'city': 'Mangalore', 'sub_continent': 'Southern Asia', 'metro': '(not set)'}","{'id': 'com.example.buyerapp', 'version': 'buyer alpha 1.0', 'install_store': None, 'firebase_app_id': '1:1019598212725:android:9f7792236ffe7f57ed323c', 'install_source': 'com.google.android.packageinstaller'}","{'name': '(direct)', 'medium': '(none)', 'source': '(direct)'}",2757690060,ANDROID,,,[]
